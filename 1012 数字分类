/*1012 数字分类 （20 分）
给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：
a1= 能被 5 整除的数字中所有偶数的和；
a2= 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算；
a3 = 被 5 除后余 2 的数字的个数；
a4= 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；
a5= 被 5 除后余 4 的数字中最大数字。
输入格式：
每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。

输出格式：
对给定的 N 个正整数，按题目要求计算 并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。

若其中某一类数字不存在，则在相应位置输出 N。

输入样例 1：
13 1 2 3 4 5 6 7 8 9 10 20 16 18
输出样例 1：
30 11 2 9.7 9
输入样例 2：
8 1 2 4 5 6 7 9 16
输出样例 2：
N 11 2 N 9*/
#include<iostream>
#include<cstdio>
using namespace std;
int main() {
	int x;
	int n;
	int q;
	int y = 1;//用来改变正负号
	int a = 0, b = 0, c = 0, e = 0,  g = 0, h = 0;//f用来计数,g用来判a1中有输入（含0）,h则预防a2代数和为0
	double average, d = 0,f=0;
	cin >> n;
	for (int i = 0; i <n; i++) {
		cin >> x;
		switch (x%5) {
		case 1:h = 1; b += (x*y); y *= (-1); break;
		case 2:c++; break;
		case 3:d += x; f++; break;
		case 4:if (x > e) { e = x; } break;
		default:if (x % 2 == 0) { g = 1; a += x; }
		}
	}
	if (g == 0) {
		cout << "N" << " ";
	}
	else {
		cout << a << " ";
	}
	if (h == 0) {
		cout << "N" << " ";
	}
	else {
		cout << b << " ";
	}
	if (c == 0) {
		cout << "N" << " ";
	}
	else {
		cout << c << " ";
	}
	if (f == 0) {
		cout << "N" << " ";
	}
	else {
		average = d / f;
		printf("%.1f", average);
		cout << " ";
	}

	if (e == 0) {
		cout << "N";
	}
	else {
		cout << e;
	}
    system("pause");
	return 0;
}
//switch 每一条case介绍都得加break，否则执行下一个case。
